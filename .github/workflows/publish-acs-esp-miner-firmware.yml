name: Publish Latest Firmware to S3

on:
  workflow_dispatch:
    inputs:
      asset_name:
        description: 'Name of the asset to upload (e.g. esp-miner.bin)'
        required: true
        default: esp-miner.bin

jobs:
  upload:
    runs-on: ubuntu-latest
    env:
      REPO: Advanced-Crypto-Services/acs-esp-miner
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Debug environment variables
        run: |
          echo "REPO=$REPO"
          echo "S3_BUCKET=$S3_BUCKET"
          echo "AWS_REGION=$AWS_REGION"

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::603187095057:role/GitHubActionsFirmwareUploadRole
          aws-region: ${{ env.AWS_REGION }}

      # Fallback/validation step for credentials
      - name: Validate AWS credentials
        run: |
          if ! aws sts get-caller-identity > /dev/null 2>&1; then
            echo "ERROR: AWS credentials are not properly configured. Check that your repository secrets and IAM role are set up correctly."
            exit 1
          fi

      - name: Download latest release asset (head request)
        run: |
          echo "Fetching URL:"
          echo "https://github.com/${REPO}/releases/latest/download/${{ github.event.inputs.asset_name }}"
          curl -I https://github.com/${REPO}/releases/latest/download/${{ github.event.inputs.asset_name }}

      - name: Download latest release asset (full)
        run: |
          curl -L \
            -o ${{ github.event.inputs.asset_name }} \
            https://github.com/${REPO}/releases/latest/download/${{ github.event.inputs.asset_name }}

      - name: Upload to S3
        run: |
          aws s3 cp \
            ${{ github.event.inputs.asset_name }} \
            s3://${{ env.S3_BUCKET }}/esp32/latest/${{ github.event.inputs.asset_name }} \
            --acl public-read
