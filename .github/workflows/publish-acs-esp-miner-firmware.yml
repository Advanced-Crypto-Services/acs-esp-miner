# .github/workflows/publish-firmware.yml
name: Publish Latest Firmware to S3

permissions:
  id-token: write      # allow OIDC token minting
  contents: read       # allow checkout

on:
  workflow_dispatch:
    inputs:
      asset_name:
        description: 'Name of the asset to upload (e.g. esp-miner.bin)'
        required: true
        default: esp-miner.bin

jobs:
  upload:
    runs-on: ubuntu-latest
    env:
      REPO: Advanced-Crypto-Services/acs-esp-miner
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ROLE_ARN: arn:aws:iam::603187095057:role/GitHubActionsFirmwareUploadRole

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ROLE_ARN }}
          aws-region:    ${{ env.AWS_REGION }}

      - name: Test S3 list (permissions check)
        run: |
          echo "Listing S3 path:"
          aws s3 ls s3://$S3_BUCKET --region $AWS_REGION \
            && echo "S3 list OK" \
            || (echo "S3 list failed, check your bucket policy" && exit 1)

      - name: Download latest release asset (head request)
        run: |
          URL="https://github.com/${REPO}/releases/latest/download/${{ github.event.inputs.asset_name }}"
          echo "HEAD $URL"
          curl -I $URL

      - name: Download latest release asset (full)
        run: |
          curl -L \
            -o ${{ github.event.inputs.asset_name }} \
            https://github.com/${REPO}/releases/latest/download/${{ github.event.inputs.asset_name }}

      - name: Upload to S3
        run: |
          aws s3 cp \
            ${{ github.event.inputs.asset_name }} \
            s3://$S3_BUCKET/firmware/acs-esp-miner/latest/${{ github.event.inputs.asset_name }} \
            --acl public-read --region $AWS_REGION
